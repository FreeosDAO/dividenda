<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="freeosdivide_8hpp" kind="file" language="C++">
    <compoundname>freeosdivide.hpp</compoundname>
    <includes local="no">eosio/asset.hpp</includes>
    <includes local="no">eosio/eosio.hpp</includes>
    <includes local="no">eosio/system.hpp</includes>
    <includes local="no">eosio/time.hpp</includes>
    <includes local="yes">freeos.hpp</includes>
    <includes refid="dividend_8hpp" local="yes">dividend.hpp</includes>
    <includedby refid="freeosdivide_8cpp" local="yes">D:/doxygen/source/freeosdivide.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>D:/doxygen/source/freeosdivide.hpp</label>
        <link refid="freeosdivide_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>eosio/eosio.hpp</label>
      </node>
      <node id="6">
        <label>freeos.hpp</label>
      </node>
      <node id="5">
        <label>eosio/time.hpp</label>
      </node>
      <node id="4">
        <label>eosio/system.hpp</label>
      </node>
      <node id="2">
        <label>eosio/asset.hpp</label>
      </node>
      <node id="7">
        <label>dividend.hpp</label>
        <link refid="dividend_8hpp"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>D:/doxygen/source/freeosdivide.hpp</label>
        <link refid="freeosdivide_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>D:/doxygen/source/freeosdivide.cpp</label>
        <link refid="freeosdivide_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structaccount" prot="private">account</innerclass>
    <innerclass refid="structcurrency__stats" prot="private">currency_stats</innerclass>
    <innerclass refid="structewstable" prot="private">ewstable</innerclass>
    <innerclass refid="structstacktbl" prot="private">stacktbl</innerclass>
    <innerclass refid="structadeposit" prot="private">adeposit</innerclass>
    <innernamespace refid="namespacestd">std</innernamespace>
    <innernamespace refid="namespaceeosio">eosio</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__freeosdivide_1ga6071d0a804c78f3a0654aa52e064ee2f" prot="private" static="no">
        <type>eosio::multi_index&lt;&quot;messages&quot;_n, status_messages &gt;</type>
        <definition>using messages_table =  eosio::multi_index&lt;&quot;messages&quot;_n, status_messages&gt;</definition>
        <argsstring></argsstring>
        <name>messages_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="231" column="3" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__freeosdivide_1gaabde34855cc117ca5719112bcb2ef357" prot="private" static="no">
        <type>eosio::multi_index&lt;&quot;proposals&quot;_n, proposal_struct &gt;</type>
        <definition>typedef eosio::multi_index&lt;&quot;proposals&quot;_n, proposal_struct&gt; proposal_table</definition>
        <argsstring></argsstring>
        <name>proposal_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="245" column="30" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__freeosdivide_1ga58e4346da9d784b448f34635da293cc0" prot="private" static="no">
        <type>eosio::multi_index&lt;&quot;registers&quot;_n, register_struct, indexed_by&lt;&quot;byacct&quot;_n, const_mem_fun&lt; register_struct, uint64_t, &amp;register_struct::get_secondary_1 &gt; &gt;&gt;</type>
        <definition>using register_table =  eosio::multi_index&lt;&quot;registers&quot;_n, register_struct, indexed_by&lt;&quot;byacct&quot;_n, const_mem_fun&lt;register_struct, uint64_t, &amp;register_struct::get_secondary_1&gt; &gt;&gt;</definition>
        <argsstring></argsstring>
        <name>register_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="261" column="3" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__freeosdivide_1ga78ca69b28fcaf5bab3e99de385ac1b1f" prot="private" static="no">
        <type>eosio::multi_index&lt;&quot;whitelist&quot;_n, whitelist_struct, indexed_by&lt;&quot;byidno&quot;_n, const_mem_fun&lt; whitelist_struct, uint64_t, &amp;whitelist_struct::get_secondary_1 &gt; &gt;&gt;</type>
        <definition>using whitelist_index =  eosio::multi_index&lt;&quot;whitelist&quot;_n, whitelist_struct, indexed_by&lt;&quot;byidno&quot;_n, const_mem_fun&lt;whitelist_struct, uint64_t, &amp;whitelist_struct::get_secondary_1&gt; &gt;&gt;</definition>
        <argsstring></argsstring>
        <name>whitelist_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="271" column="3" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__freeosdivide_1gabf62229d9efabcf6970fbf1df2db973e" prot="private" static="no">
        <type>eosio::multi_index&lt;&quot;totals&quot;_n, total_struct &gt;</type>
        <definition>using total_index =  eosio::multi_index&lt;&quot;totals&quot;_n, total_struct&gt;</definition>
        <argsstring></argsstring>
        <name>total_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="279" column="3" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__freeosdivide_1ga7b6f286b5f150ddd8a3e5d33e55baa70" prot="private" static="no">
        <type>eosio::multi_index&lt;&quot;dryruns&quot;_n, dryrun_struct &gt;</type>
        <definition>using dryrun_data =  eosio::multi_index&lt;&quot;dryruns&quot;_n, dryrun_struct&gt;</definition>
        <argsstring></argsstring>
        <name>dryrun_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="287" column="3" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__freeosdivide_1gae943dead3e20f23f9362634298c8ef6a" prot="private" static="no">
        <type>eosio::multi_index&lt; &quot;accounts&quot;_n, account &gt;</type>
        <definition>typedef eosio::multi_index&lt; &quot;accounts&quot;_n, account &gt; accounts</definition>
        <argsstring></argsstring>
        <name>accounts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="302" column="30" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__freeosdivide_1ga1e6b5f225ad9d0c53b369b0f2d4bbc49" prot="private" static="no">
        <type>eosio::multi_index&lt; &quot;stat&quot;_n, currency_stats &gt;</type>
        <definition>typedef eosio::multi_index&lt; &quot;stat&quot;_n, currency_stats &gt; stats</definition>
        <argsstring></argsstring>
        <name>stats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="303" column="30" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__freeosdivide_1ga59007f4afeb4040a0c56e56a4ab1aaff" prot="private" static="no">
        <type>eosio::multi_index&lt; &quot;ewstables&quot;_n, ewstable &gt;</type>
        <definition>typedef eosio::multi_index&lt; &quot;ewstables&quot;_n, ewstable &gt; ewsanalytics</definition>
        <argsstring></argsstring>
        <name>ewsanalytics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="311" column="30" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__freeosdivide_1gade61a937f4aa45db0c159718934e5149" prot="private" static="no">
        <type>eosio::multi_index&lt;&quot;stacktbls&quot;_n, stacktbl &gt;</type>
        <definition>using stacktype =  eosio::multi_index&lt;&quot;stacktbls&quot;_n, stacktbl &gt;</definition>
        <argsstring></argsstring>
        <name>stacktype</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="318" column="3" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__freeosdivide_1gaaf0de9a26fa3ccaf89710d123079e088" prot="private" static="no">
        <type>eosio::multi_index&lt;&quot;deposits&quot;_n, adeposit &gt;</type>
        <definition>using adeposit_index =  eosio::multi_index&lt;&quot;deposits&quot;_n, adeposit&gt;</definition>
        <argsstring></argsstring>
        <name>adeposit_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="328" column="5" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="328" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__freeosdivide_1ga15f26a14e60f878480370d1369b33975" prot="public" static="no" mutable="no">
        <type>CONTRACT</type>
        <definition>CONTRACT freeosdivide</definition>
        <argsstring></argsstring>
        <name>freeosdivide</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="23" column="10" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__freeosdivide_1ga6d99e1a9fa8e5d0bae2a8433a92fe2c5" prot="private" static="no" mutable="no">
        <type>TABLE</type>
        <definition>TABLE status_messages</definition>
        <argsstring></argsstring>
        <name>status_messages</name>
        <initializer>{                 
                                          
    uint64_t key</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="225" column="9" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__freeosdivide_1ga0e3083f63326aec43bf8ee88bedfa9f5" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t errorno</definition>
        <argsstring></argsstring>
        <name>errorno</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="228" column="14" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__freeosdivide_1ga89fa712506f9bccf58a99b82c7730b6c" prot="private" static="no" mutable="no">
        <type>TABLE</type>
        <definition>TABLE proposal_struct</definition>
        <argsstring></argsstring>
        <name>proposal_struct</name>
        <initializer>{                     
      uint64_t key</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="233" column="9" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__freeosdivide_1ga6f3659b8948089e75913001427321cff" prot="private" static="no" mutable="no">
        <type>name</type>
        <definition>name eosaccount</definition>
        <argsstring></argsstring>
        <name>eosaccount</name>
        <briefdescription>
<para>freeos account used to receive dividends and for identification </para>
        </briefdescription>
        <detaileddescription>
<para>freeos account used to receive dividends and for identification (as a secondary key) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="235" column="12" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__freeosdivide_1ga943a308f745ea7ddc590893803538b3b" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t roi_target_cap</definition>
        <argsstring></argsstring>
        <name>roi_target_cap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="236" column="15" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__freeosdivide_1ga53e2f1781c80c5f90fad166788ec0826" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double period_percentage</definition>
        <argsstring></argsstring>
        <name>period_percentage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="237" column="14" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__freeosdivide_1ga18a0f1e6c3d21c252b14ea6ae162e2ff" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool locked</definition>
        <argsstring></argsstring>
        <name>locked</name>
        <briefdescription>
<para>lock dividends for selected new members. Note: When unlock cannot be locked again. </para>
        </briefdescription>
        <detaileddescription>
<para>lock dividends for selected new members. Note: When unlock should be not lock again. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="238" column="12" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__freeosdivide_1gaae699db4cd32e186d2595aa9c6722ff3" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t expires_at</definition>
        <argsstring></argsstring>
        <name>expires_at</name>
        <briefdescription>
<para>expiry for the proposal only (must be voted before that time) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="239" column="16" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__freeosdivide_1ga8fdee1a34c611af3b80c2f2ec2261937" prot="private" static="no" mutable="no">
        <type>asset</type>
        <definition>asset threshold</definition>
        <argsstring></argsstring>
        <name>threshold</name>
        <initializer>= asset(0,symbol(&quot;FREEOS&quot;,4) )</initializer>
        <briefdescription>
<para>max total divident (2) for horizontal cap or max weekly dividend for vertical (3) cap </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="240" column="13" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__freeosdivide_1ga2ee36626efc6412f2f4f61e0ab3c70ab" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t rates_left</definition>
        <argsstring></argsstring>
        <name>rates_left</name>
        <briefdescription>
<para>count down payments left in iteration cap (I) only <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="241" column="16" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__freeosdivide_1ga00344991a2d6572fb92c1eb08eccf373" prot="private" static="no" mutable="no">
        <type>asset</type>
        <definition>asset accrued</definition>
        <argsstring></argsstring>
        <name>accrued</name>
        <initializer>= asset(0,symbol(&quot;FREEOS&quot;,4) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="242" column="13" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__freeosdivide_1ga4ff3902f894baa98a548a9970ceb3eb0" prot="private" static="no" mutable="no">
        <type>TABLE</type>
        <definition>TABLE register_struct</definition>
        <argsstring></argsstring>
        <name>register_struct</name>
        <initializer>{                   
      uint64_t nft_id</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="247" column="9" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__freeosdivide_1gad548e0ddf7d80fa40b8585d2af36ee2e" prot="private" static="no" mutable="no">
        <type>time_point_sec</type>
        <definition>time_point_sec mint_date</definition>
        <argsstring></argsstring>
        <name>mint_date</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="253" column="22" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__freeosdivide_1ga0242ba99ec91574f02749fcf93252b31" prot="private" static="no" mutable="no">
        <type>TABLE</type>
        <definition>TABLE whitelist_struct</definition>
        <argsstring></argsstring>
        <name>whitelist_struct</name>
        <initializer>{                 
      uint64_t idno</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="264" column="9" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__freeosdivide_1ga1837d4669dd7243486e15efe6519941d" prot="private" static="no" mutable="no">
        <type>name</type>
        <definition>name user</definition>
        <argsstring></argsstring>
        <name>user</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="266" column="16" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__freeosdivide_1gabe1fbcd2f5d24b359c77f14d464092ec" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t vote</definition>
        <argsstring></argsstring>
        <name>vote</name>
        <briefdescription>
<para>0 -n/a 1 - no 2 - yes / - different than zero if already voted </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="267" column="16" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__freeosdivide_1ga1bdbb92760fe0073f142a98d6c98028d" prot="private" static="no" mutable="no">
        <type>TABLE</type>
        <definition>TABLE total_struct</definition>
        <argsstring></argsstring>
        <name>total_struct</name>
        <initializer>{
      name     user</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="274" column="9" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__freeosdivide_1ga1d081365f8bdcbf20807d7a615052906" prot="private" static="no" mutable="no">
        <type>asset</type>
        <definition>asset to_receive</definition>
        <argsstring></argsstring>
        <name>to_receive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="276" column="16" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__freeosdivide_1gaa5b9e65624449455952db1bfe1e0ca2e" prot="private" static="no" mutable="no">
        <type>TABLE</type>
        <definition>TABLE dryrun_struct</definition>
        <argsstring></argsstring>
        <name>dryrun_struct</name>
        <initializer>{
    name user</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="282" column="9" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__freeosdivide_1ga41de8c3b3e6a186fe51d66099c70d205" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double perctotal</definition>
        <argsstring></argsstring>
        <name>perctotal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="284" column="12" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="284" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__freeosdivide_1ga5dcc995e2a406f8919e65508c54d23e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeosdivide::allowance</definition>
        <argsstring>(uint8_t code, name vipname)</argsstring>
        <name>allowance</name>
        <param>
          <type>uint8_t</type>
          <declname>code</declname>
        </param>
        <param>
          <type>name</type>
          <declname>vipname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>allowance action.</para>
<para>Creates VIP table defining proposer and voters.</para>
<para><simplesect kind="pre"><para>required contract permission </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="37" column="10" bodyfile="D:/doxygen/source/freeosdivide.cpp" bodystart="6" bodyend="27" declfile="D:/doxygen/source/freeosdivide.hpp" declline="37" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1ga4e1052ec54317a2012b5ea975dd20f45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeosdivide::singleplay</definition>
        <argsstring>(uint64_t periodpoint, asset profit)</argsstring>
        <name>singleplay</name>
        <param>
          <type>uint64_t</type>
          <declname>periodpoint</declname>
        </param>
        <param>
          <type>asset</type>
          <declname>profit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="43" column="10" bodyfile="D:/doxygen/source/freeosdivide.cpp" bodystart="364" bodyend="370" declfile="D:/doxygen/source/freeosdivide.hpp" declline="43" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1ga4d4856cd2f28a5b62983ae760ef1f342" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeosdivide::dryrun</definition>
        <argsstring>()</argsstring>
        <name>dryrun</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>dryrun action.</para>
<para>This is analytics software. It counts estimated summary percentage of dividends to be paid This is counted on a basis of all active at this moment NFT&apos;s. NFT&apos;s which have already all rates paid (cap=1) or NFT&apos;s completely paid due to overcoming total accrued threshold value (cap=2) are also not counted. Cap=3 founders NFT&apos;s which are temporarily locked are counted as soon it will be paid again. <linebreak/>
 Additional information which NFT&apos;s are already paid will be given on the NFT&apos;s list displayed by the front-end. analytics table - displays cummulative percentage of active NFTs on a basis of cap category summary1 table - displays cumulative percentage of active NFTs on a basis of each user NFTs owner. <linebreak/>
</para>
<para><simplesect kind="pre"><para>required any account listed on whitelist. <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="61" column="10" bodyfile="D:/doxygen/source/freeosdivide.cpp" bodystart="209" bodyend="358" declfile="D:/doxygen/source/freeosdivide.hpp" declline="61" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1gac37c75eefb19fd0f9c855c7f9166b339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeosdivide::proposalnew</definition>
        <argsstring>(const name proposer, const name eosaccount, const uint8_t roi_target_cap, const double period_percentage, const asset threshold, const uint32_t rates_left, const bool locked)</argsstring>
        <name>proposalnew</name>
        <param>
          <type>const name</type>
          <declname>proposer</declname>
        </param>
        <param>
          <type>const name</type>
          <declname>eosaccount</declname>
          <briefdescription><para>freeos account used to receive dividends and for identification </para>
</briefdescription>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>roi_target_cap</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>period_percentage</declname>
        </param>
        <param>
          <type>const asset</type>
          <declname>threshold</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>rates_left</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>locked</declname>
          <briefdescription><para>lock dividends for selected new founders. Note: When unlock cannot be locked again. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proposalnew action.</para>
<para>Creates new proposal. The proposal (if accepted) becomes a base to mint new NFT. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>proposer</parametername>
</parameternamelist>
<parameterdescription>
<para>- The account name of a person eligible to create new proposal. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eosaccount</parametername>
</parameternamelist>
<parameterdescription>
<para>- The account name of future owner of new proposed NFT (investor or founder). <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>roi_target_cap</parametername>
</parameternamelist>
<parameterdescription>
<para>- Type of Dividend Policy (roi): 1- 2- 3- </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>period_percentage</parametername>
</parameternamelist>
<parameterdescription>
<para>- Pre-agreed percentage of weekly dividend which will be transfered to eosaccount. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>- Upper limit for dividend payment (if roi=1 n/a, if roi=2 cummulative limit, if roi=3 weekly limit). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rates_left</parametername>
</parameternamelist>
<parameterdescription>
<para>- Number of weekly dividend payment left to pay (only for roi=1). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>locked</parametername>
</parameternamelist>
<parameterdescription>
<para>- Lock of payments (only for roi=3).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>requires proposer permission </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="79" column="10" bodyfile="D:/doxygen/source/freeosdivide.cpp" bodystart="31" bodyend="99" declfile="D:/doxygen/source/freeosdivide.hpp" declline="79" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1gaac7fde7d05638b618f6c6fa4c4e389ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeosdivide::proposalvote</definition>
        <argsstring>(const name voter, const uint8_t vote)</argsstring>
        <name>proposalvote</name>
        <param>
          <type>const name</type>
          <declname>voter</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>vote</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proposalvote action.</para>
<para>New proposal acceptance review by voting. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>voter</parametername>
</parameternamelist>
<parameterdescription>
<para>- The voter name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vote</parametername>
</parameternamelist>
<parameterdescription>
<para>- The vote: 0 - ignored/no vote, 1 - no, 2 - yes/accept.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>requires voter permission </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="94" column="10" bodyfile="D:/doxygen/source/freeosdivide.cpp" bodystart="103" bodyend="196" declfile="D:/doxygen/source/freeosdivide.hpp" declline="94" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1ga3469572d9787f108dd5b3187496d8d43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeosdivide::propreset</definition>
        <argsstring>(name proposer)</argsstring>
        <name>propreset</name>
        <param>
          <type>name</type>
          <declname>proposer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>propreset action.</para>
<para>Prematurely erase proposal.</para>
<para><simplesect kind="pre"><para>requires proposer permission. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="104" column="10" bodyfile="D:/doxygen/source/freeosdivide.cpp" bodystart="743" bodyend="764" declfile="D:/doxygen/source/freeosdivide.hpp" declline="104" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1ga479b24c700f59477973330d36511da02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeosdivide::removeallow</definition>
        <argsstring>()</argsstring>
        <name>removeallow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>removeallow action</para>
<para>Removes the white_list table.</para>
<para><simplesect kind="pre"><para>requires contract permission </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="114" column="10" bodyfile="D:/doxygen/source/freeosdivide.cpp" bodystart="784" bodyend="792" declfile="D:/doxygen/source/freeosdivide.hpp" declline="114" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1gac903fc4093144d338a7232e337defdbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeosdivide::regchown</definition>
        <argsstring>(name userfrom, name userto, uint64_t nft_id)</argsstring>
        <name>regchown</name>
        <param>
          <type>name</type>
          <declname>userfrom</declname>
        </param>
        <param>
          <type>name</type>
          <declname>userto</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>nft_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>regchown action.</para>
<para>Changes NFT ownership (NFT transfer).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>userfrom</parametername>
</parameternamelist>
<parameterdescription>
<para>- original NFT owner </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userto</parametername>
</parameternamelist>
<parameterdescription>
<para>- receiver of NFT </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nft_id</parametername>
</parameternamelist>
<parameterdescription>
<para>- the NFT key</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>requires userfrom permission. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="128" column="10" bodyfile="D:/doxygen/source/freeosdivide.cpp" bodystart="769" bodyend="780" declfile="D:/doxygen/source/freeosdivide.hpp" declline="128" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1ga80e090ca1b155767e06311aff10c2717" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeosdivide::version</definition>
        <argsstring>()</argsstring>
        <name>version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>version action.</para>
<para>answers by the software version </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="136" column="10" bodyfile="D:/doxygen/source/freeosdivide.cpp" bodystart="796" bodyend="798" declfile="D:/doxygen/source/freeosdivide.hpp" declline="136" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1gab1ba6fe0ec96a8dd3d4b26ff96f05757" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeosdivide::replay</definition>
        <argsstring>()</argsstring>
        <name>replay</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>replay action</para>
<para>ignite processing of a dividend sharing in relation to the current period. also is able to process past omitted dividends in reverse order. Prevent that threshold will cut exact value of dividend.</para>
<para><simplesect kind="pre"><para>do not need any </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="148" column="10" bodyfile="D:/doxygen/source/freeosdivide.cpp" bodystart="607" bodyend="630" declfile="D:/doxygen/source/freeosdivide.hpp" declline="148" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1ga376f256a9e25e140e3df0553938efac6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeosdivide::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>clear action TEST</para>
<para>TEST ONLY: zeroes the &apos;summary&apos; table without erasing it (no RAM released)</para>
<para><simplesect kind="pre"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="159" column="9" bodyfile="D:/doxygen/source/freeosdivide.cpp" bodystart="680" bodyend="690" declfile="D:/doxygen/source/freeosdivide.hpp" declline="159" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1gac0a0055e46375908b1f81ee2f67b594d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeosdivide::clear1</definition>
        <argsstring>()</argsstring>
        <name>clear1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>clear1 action TEST</para>
<para>TEST ONLY: Completely erase &apos;summary&apos; table. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="169" column="9" bodyfile="D:/doxygen/source/freeosdivide.cpp" bodystart="694" bodyend="702" declfile="D:/doxygen/source/freeosdivide.hpp" declline="169" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1ga8b4e76fe7bce1ae74a945a493de0195a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeosdivide::setdeposit</definition>
        <argsstring>(uint64_t iter, asset accr)</argsstring>
        <name>setdeposit</name>
        <param>
          <type>uint64_t</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>asset</type>
          <declname>accr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setdeposit action TEST</para>
<para>TEST ONLY: creates fake &apos;deposit&apos; table. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="179" column="9" bodyfile="D:/doxygen/source/freeosdivide.cpp" bodystart="634" bodyend="642" declfile="D:/doxygen/source/freeosdivide.hpp" declline="179" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1ga49287d6b86872ab995d097a2851e95f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeosdivide::votesreset11</definition>
        <argsstring>()</argsstring>
        <name>votesreset11</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>votesreset11 action TEST</para>
<para>TEST ONLY: Clean up the voting results (last column in &apos;whitelist&apos; table). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="188" column="10" bodyfile="D:/doxygen/source/freeosdivide.cpp" bodystart="706" bodyend="716" declfile="D:/doxygen/source/freeosdivide.hpp" declline="188" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1gade5508153c860afcf6a1200f5500a638" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeosdivide::removedepos</definition>
        <argsstring>(uint64_t iteration)</argsstring>
        <name>removedepos</name>
        <param>
          <type>uint64_t</type>
          <declname>iteration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="192" column="10" bodyfile="D:/doxygen/source/freeosdivide.cpp" bodystart="669" bodyend="676" declfile="D:/doxygen/source/freeosdivide.hpp" declline="192" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1gaea9256086ce4c51ca16bf793f57a103e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeosdivide::zerofortest</definition>
        <argsstring>()</argsstring>
        <name>zerofortest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="201" column="10" bodyfile="D:/doxygen/source/freeosdivide.cpp" bodystart="646" bodyend="654" declfile="D:/doxygen/source/freeosdivide.hpp" declline="201" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1ga696d1b2c17278df624dbeac31115ca6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeosdivide::notify_front</definition>
        <argsstring>(uint8_t number)</argsstring>
        <name>notify_front</name>
        <param>
          <type>uint8_t</type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="204" column="10" bodyfile="D:/doxygen/source/freeosdivide.cpp" bodystart="721" bodyend="729" declfile="D:/doxygen/source/freeosdivide.hpp" declline="204" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1ga3f54a85bd52bfd68c190e341de306bba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeosdivide::clearfront</definition>
        <argsstring>()</argsstring>
        <name>clearfront</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="205" column="10" bodyfile="D:/doxygen/source/freeosdivide.cpp" bodystart="732" bodyend="738" declfile="D:/doxygen/source/freeosdivide.hpp" declline="205" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1ga067b4819b4bbafc9ac3e666a80186cb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeosdivide::removeonenft</definition>
        <argsstring>(uint64_t nft_id)</argsstring>
        <name>removeonenft</name>
        <param>
          <type>uint64_t</type>
          <declname>nft_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="209" column="10" bodyfile="D:/doxygen/source/freeosdivide.cpp" bodystart="658" bodyend="665" declfile="D:/doxygen/source/freeosdivide.hpp" declline="209" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1ga3e23c9fd06a0854167980e4e6fb4a83a" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>time_point_sec</type>
        <definition>static time_point_sec current_time_point_sec</definition>
        <argsstring>()</argsstring>
        <name>current_time_point_sec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="213" column="34" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="213" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1ga1d6f7cc76d564d41a635075b12ea6d40" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t now</definition>
        <argsstring>()</argsstring>
        <name>now</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="217" column="14" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="217" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1ga7553043f60482ff7d15275faeb63e7cd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeosdivide::dividendhand</definition>
        <argsstring>(uint64_t periodpoint, asset profit)</argsstring>
        <name>dividendhand</name>
        <param>
          <type>uint64_t</type>
          <declname>periodpoint</declname>
        </param>
        <param>
          <type>asset</type>
          <declname>profit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>to_receive.amount = ((profit.amount/100.00)*dao_percent); //In fact this is our leftover for DAO account now in FREEOS.</para>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="221" column="10" bodyfile="D:/doxygen/source/freeosdivide.cpp" bodystart="373" bodyend="601" declfile="D:/doxygen/source/freeosdivide.hpp" declline="221" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1ga4997feebecdd525de6e494639d13a7b4" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>uint64_t primary_key</definition>
        <argsstring>() const</argsstring>
        <name>primary_key</name>
        <briefdescription>
<para>This table should be filled up only by a real multisig. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="229" column="10" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="229" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1ga5028589707ea6a7d8462f7b339877ae4" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t get_secondary_1</definition>
        <argsstring>() const</argsstring>
        <name>get_secondary_1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="259" column="16" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="259" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1gac6ec480bd537eee109523df3bb72c143" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_deposit</definition>
        <argsstring>(uint64_t iteration, asset accrued)</argsstring>
        <name>set_deposit</name>
        <param>
          <type>uint64_t</type>
          <declname>iteration</declname>
        </param>
        <param>
          <type>asset</type>
          <declname>accrued</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="332" column="6" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="332" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="group__freeosdivide_1ga7f7a7ff4781ec2beabbec9a5288e2452" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t readiter</definition>
        <argsstring>()</argsstring>
        <name>readiter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/doxygen/source/freeosdivide.hpp" line="364" column="10" bodyfile="D:/doxygen/source/freeosdivide.hpp" bodystart="364" bodyend="368"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;eosio/asset.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eosio/eosio.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eosio/system.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eosio/time.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freeos.hpp&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tom&apos;s<sp/>file<sp/>from<sp/>airgrab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dividend_8hpp" kindref="compound">dividend.hpp</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Const<sp/>definition&apos;s<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">eosio;<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="group__freeosdivide_1ga15f26a14e60f878480370d1369b33975" refkind="member"><highlight class="normal">CONTRACT<sp/><ref refid="group__freeosdivide_1ga15f26a14e60f878480370d1369b33975" kindref="member">freeosdivide</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>contract<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>contract::contract;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>[[eosio::action]]</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__freeosdivide_1ga5dcc995e2a406f8919e65508c54d23e8" kindref="member">allowance</ref>(<sp/>uint8_t<sp/>code,<sp/>name<sp/>vipname<sp/>);<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dividend<sp/>counting<sp/>for<sp/>one<sp/>selected<sp/>iteration.<sp/><sp/>TEST<sp/>ONLY<sp/>-<sp/>remove<sp/>after<sp/>tests!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Its<sp/>not<sp/>verify<sp/>the<sp/>iteration<sp/>and<sp/>profit<sp/>to<sp/>share<sp/>are<sp/>correct!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>[[eosio::action]]</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__freeosdivide_1ga4e1052ec54317a2012b5ea975dd20f45" kindref="member">singleplay</ref>(<sp/>uint64_t<sp/>periodpoint,<sp/>asset<sp/>profit<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>[[eosio::action]]</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__freeosdivide_1ga4d4856cd2f28a5b62983ae760ef1f342" kindref="member">dryrun</ref>(<sp/>);<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>[[eosio::action]]</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__freeosdivide_1gac37c75eefb19fd0f9c855c7f9166b339" kindref="member">proposalnew</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name<sp/>proposer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name<sp/>eosaccount,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>roi_target_cap,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>period_percentage,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>threshold,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>rates_left,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>locked<sp/>);<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>[[eosio::action]]</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__freeosdivide_1gaac7fde7d05638b618f6c6fa4c4e389ec" kindref="member">proposalvote</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name<sp/>voter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>vote<sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>[[eosio::action]]</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__freeosdivide_1ga3469572d9787f108dd5b3187496d8d43" kindref="member">propreset</ref>(<sp/>name<sp/>proposer<sp/>);<sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>[[eosio::action]]</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__freeosdivide_1ga479b24c700f59477973330d36511da02" kindref="member">removeallow</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>[[eosio::action]]<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__freeosdivide_1gac903fc4093144d338a7232e337defdbb" kindref="member">regchown</ref>(name<sp/>userfrom,<sp/>name<sp/>userto,<sp/>uint64_t<sp/>nft_id);<sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>[[eosio::action]]<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__freeosdivide_1ga80e090ca1b155767e06311aff10c2717" kindref="member">version</ref>();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>[[eosio::action]]</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__freeosdivide_1gab1ba6fe0ec96a8dd3d4b26ff96f05757" kindref="member">replay</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/>[[eosio::action]]</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__freeosdivide_1ga376f256a9e25e140e3df0553938efac6" kindref="member">clear</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/>[[eosio::action]]</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__freeosdivide_1gac0a0055e46375908b1f81ee2f67b594d" kindref="member">clear1</ref>();<sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/>[[eosio::action]]</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__freeosdivide_1ga8b4e76fe7bce1ae74a945a493de0195a" kindref="member">setdeposit</ref>(<sp/>uint64_t<sp/>iter,<sp/>asset<sp/>accr<sp/>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>[[eosio::action]]<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__freeosdivide_1ga49287d6b86872ab995d097a2851e95f8" kindref="member">votesreset11</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TESTS<sp/>ONLY:<sp/>remove<sp/>single<sp/>deposit<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>[[eosio::action]]</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__freeosdivide_1gade5508153c860afcf6a1200f5500a638" kindref="member">removedepos</ref>(uint64_t<sp/>iteration);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>zerofortest<sp/>action<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@details<sp/>TEST<sp/>ONLY:<sp/>Remove<sp/>NFTs<sp/>from<sp/>the<sp/>&apos;register&apos;.</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>[[eosio::action]]<sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__freeosdivide_1gaea9256086ce4c51ca16bf793f57a103e" kindref="member">zerofortest</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>helper<sp/>functions<sp/>used<sp/>only<sp/>internally<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__freeosdivide_1ga696d1b2c17278df624dbeac31115ca6c" kindref="member">notify_front</ref>(<sp/>uint8_t<sp/>number<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__freeosdivide_1ga3f54a85bd52bfd68c190e341de306bba" kindref="member">clearfront</ref>();<sp/><sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TEST<sp/>ONLY<sp/>-<sp/>removes<sp/>selected<sp/>one<sp/>NFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>[[eosio::action]]</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__freeosdivide_1ga067b4819b4bbafc9ac3e666a80186cb0" kindref="member">removeonenft</ref>(uint64_t<sp/>nft_id);<sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>time_point_sec<sp/>current_time_point_sec()<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>time_point_sec(current_time_point());</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>now()<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_time_point().sec_since_epoch();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dividendhand(<sp/>uint64_t<sp/>periodpoint,<sp/>asset<sp/>profit<sp/>);<sp/></highlight><highlight class="comment">//This<sp/>should<sp/>be<sp/>called<sp/>only<sp/>as<sp/>internal<sp/>function<sp/>from<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>other<sp/>action<sp/>due<sp/>security.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>TABLE<sp/>status_messages<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>keep<sp/>the<sp/>error<sp/>numbers<sp/>for<sp/>the<sp/>latest<sp/>proposal<sp/>to<sp/>be<sp/>interpreted<sp/>by<sp/>the<sp/>frontend.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>New<sp/>proposal<sp/>erases<sp/>this<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>key;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/>errorno;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>primary_key()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key;<sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>messages_table<sp/>=<sp/>eosio::multi_index&lt;</highlight><highlight class="stringliteral">&quot;messages&quot;</highlight><highlight class="normal">_n,<sp/>status_messages&gt;;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>TABLE<sp/>proposal_struct<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>key;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>primary<sp/>key<sp/>=<sp/>always<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>eosaccount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>roi_target_cap;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>period_percentage;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//percentage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>locked;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>expires_at;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asset<sp/>threshold;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rates_left;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asset<sp/>accrued;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>primary_key()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key;<sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>eosio::multi_index&lt;</highlight><highlight class="stringliteral">&quot;proposals&quot;</highlight><highlight class="normal">_n,<sp/>proposal_struct&gt;<sp/>proposal_table;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>TABLE<sp/>register_struct<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>register<sp/>each<sp/>record<sp/>is<sp/>a<sp/>single<sp/>NFT<sp/>by<sp/>itself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>nft_id;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>person<sp/>may<sp/>have<sp/>several<sp/>NFTs<sp/>-<sp/>nft_id<sp/>is<sp/>primary<sp/>key<sp/>with<sp/>autoincrement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/><sp/><sp/><sp/><sp/>eosaccount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/>roi_target_cap;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1-<sp/>iterative<sp/>2-<sp/>horizontal<sp/>3-<sp/>vertical<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/>period_percentage;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>this<sp/>is<sp/>used<sp/>for<sp/>counting<sp/>dividend<sp/>to<sp/>pay<sp/>-<sp/>the<sp/>other<sp/>parameters<sp/>wxamine<sp/>eligibility<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>payment<sp/>and<sp/>it&apos;s<sp/>size.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>time_point_sec<sp/>mint_date;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>date<sp/>(when<sp/>this<sp/>register<sp/>record<sp/>was<sp/>created)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>locked;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asset<sp/><sp/><sp/><sp/>threshold<sp/>=<sp/>asset(0,symbol(</highlight><highlight class="stringliteral">&quot;FREEOS&quot;</highlight><highlight class="normal">,4)<sp/>);<sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rates_left;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asset<sp/><sp/><sp/><sp/>accrued<sp/>=<sp/>asset(0,symbol(</highlight><highlight class="stringliteral">&quot;FREEOS&quot;</highlight><highlight class="normal">,4)<sp/>);<sp/>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>primary_key()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nft_id;}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>get_secondary_1()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eosaccount.value;}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>register_table<sp/>=<sp/>eosio::multi_index&lt;</highlight><highlight class="stringliteral">&quot;registers&quot;</highlight><highlight class="normal">_n,<sp/>register_struct,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>indexed_by&lt;</highlight><highlight class="stringliteral">&quot;byacct&quot;</highlight><highlight class="normal">_n,<sp/>const_mem_fun&lt;register_struct,<sp/>uint64_t,<sp/>&amp;register_struct::get_secondary_1&gt;&gt;&gt;;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>TABLE<sp/>whitelist_struct<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>!&lt;<sp/>whitelist_struct<sp/>-<sp/>List<sp/>of<sp/>allowed<sp/>proposers<sp/>and<sp/>voters<sp/>along<sp/>with<sp/>their<sp/>vote.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>idno;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(1-proposer,<sp/>2,3<sp/>voters)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/><sp/><sp/><sp/><sp/>user;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/>vote;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>primary_key()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>user.value;<sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>get_secondary_1()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idno;<sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>whitelist_index<sp/>=<sp/>eosio::multi_index&lt;</highlight><highlight class="stringliteral">&quot;whitelist&quot;</highlight><highlight class="normal">_n,<sp/>whitelist_struct,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>indexed_by&lt;</highlight><highlight class="stringliteral">&quot;byidno&quot;</highlight><highlight class="normal">_n,<sp/>const_mem_fun&lt;whitelist_struct,<sp/>uint64_t,<sp/>&amp;whitelist_struct::get_secondary_1&gt;&gt;&gt;;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>TABLE<sp/>total_struct<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/><sp/><sp/><sp/><sp/>user;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asset<sp/><sp/><sp/><sp/>to_receive;<sp/><sp/></highlight><highlight class="comment">//This<sp/>is<sp/>a<sp/>cumulative<sp/>amount<sp/>of<sp/>FREEOS<sp/>tokens<sp/>which<sp/>will<sp/>be<sp/>paid<sp/>to<sp/>the<sp/>user<sp/>on<sp/>a<sp/>basis<sp/>of<sp/>all<sp/>owned<sp/>NFTs.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>primary_key()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>user.value;<sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>total_index<sp/>=<sp/>eosio::multi_index&lt;</highlight><highlight class="stringliteral">&quot;totals&quot;</highlight><highlight class="normal">_n,<sp/>total_struct&gt;;<sp/><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>TABLE<sp/>dryrun_struct<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>user;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>perctotal;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>primary_key()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>user.value;<sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>dryrun_data<sp/>=<sp/>eosio::multi_index&lt;</highlight><highlight class="stringliteral">&quot;dryruns&quot;</highlight><highlight class="normal">_n,<sp/>dryrun_struct&gt;;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>copies<sp/>of<sp/>declarations<sp/>from<sp/>freeos333333/freeostokens<sp/>for<sp/>inline<sp/>operations<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">[[eosio::table]]<sp/>account<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>asset<sp/><sp/><sp/><sp/>balance;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>primary_key()</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>balance.symbol.code().raw();<sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">[[eosio::table]]<sp/>currency_stats<sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//imported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>asset<sp/><sp/><sp/><sp/>supply;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>asset<sp/><sp/><sp/><sp/>max_supply;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>name<sp/><sp/><sp/><sp/><sp/>issuer;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>primary_key()</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>supply.symbol.code().raw();<sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>eosio::multi_index&lt;<sp/></highlight><highlight class="stringliteral">&quot;accounts&quot;</highlight><highlight class="normal">_n,<sp/>account<sp/>&gt;<sp/>accounts;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>eosio::multi_index&lt;<sp/></highlight><highlight class="stringliteral">&quot;stat&quot;</highlight><highlight class="normal">_n,<sp/>currency_stats<sp/>&gt;<sp/>stats;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>extra<sp/>imported<sp/>declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">[[eosio::table]]<sp/>ewstable<sp/>{<sp/></highlight><highlight class="comment">//<sp/>ews<sp/>table<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>category;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>primary_key()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>category;<sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>eosio::multi_index&lt;<sp/></highlight><highlight class="stringliteral">&quot;ewstables&quot;</highlight><highlight class="normal">_n,<sp/>ewstable<sp/>&gt;<sp/>ewsanalytics;<sp/></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">[[eosio::table]]<sp/>stacktbl<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>implements<sp/>a<sp/>kind<sp/>of<sp/>stack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uint64_t<sp/>previous;<sp/>//<sp/>previous<sp/>period</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>current;<sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/><sp/>period<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>primary_key()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>single<sp/>row<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>};<sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>stacktype<sp/>=<sp/>eosio::multi_index&lt;</highlight><highlight class="stringliteral">&quot;stacktbls&quot;</highlight><highlight class="normal">_n,<sp/>stacktbl<sp/>&gt;;<sp/><sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Import<sp/>from<sp/>airgrab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">//Copy<sp/>of<sp/>freedao<sp/>deposits<sp/>table<sp/>only<sp/>for<sp/>testing<sp/>-<sp/>TEST<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">[[eosio::table]]<sp/>adeposit<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/><sp/><sp/>iteration;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asset<sp/><sp/><sp/><sp/><sp/><sp/>accrued;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>primary_key()</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iteration;<sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>adeposit_index<sp/>=<sp/>eosio::multi_index&lt;</highlight><highlight class="stringliteral">&quot;deposits&quot;</highlight><highlight class="normal">_n,<sp/>adeposit&gt;;<sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>is<sp/>for<sp/>test<sp/>-<sp/>replace<sp/>by<sp/>the<sp/>original<sp/>above.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>set<sp/>up<sp/>test<sp/>data<sp/>simulating<sp/>external<sp/>deposit<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Also<sp/>this<sp/>updates<sp/>simulated<sp/>current<sp/>iteration<sp/>number<sp/>to<sp/>this<sp/>new<sp/>entered<sp/>deposit<sp/>row.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_deposit(<sp/>uint64_t<sp/>iteration,<sp/>asset<sp/>accrued<sp/>){<sp/></highlight><highlight class="comment">//NOTE:<sp/>TEST<sp/>ONLY<sp/>-<sp/>after<sp/>testing<sp/>should<sp/>be<sp/>removed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>adeposit_index<sp/>depositrow(<sp/>get_self(),<sp/>get_self().value<sp/>);<sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>depositrow.find(<sp/>iteration<sp/>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>idx<sp/>==<sp/>depositrow.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>depositrow.emplace(<sp/>get_self(),<sp/>[&amp;](<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>row<sp/>)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row.iteration<sp/>=<sp/>iteration;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row.accrued<sp/><sp/><sp/>=<sp/>accrued;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>depositrow.modify(idx,<sp/>get_self(),<sp/>[&amp;](<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>row<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>modification<sp/>is<sp/>usable<sp/>for<sp/>testing<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row.iteration<sp/>=<sp/>iteration;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row.accrued<sp/><sp/><sp/>=<sp/>accrued;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>stacktype<sp/>currentitr(<sp/>get_self(),<sp/>get_self().value<sp/>);<sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>idv<sp/>=<sp/>currentitr.find(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>idv<sp/>==<sp/>currentitr.end()<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//first<sp/>time<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>currentitr.emplace(<sp/>get_self(),<sp/>[&amp;](<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>row<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row.current<sp/>=<sp/>iteration;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>currentitr.modify(idv,<sp/>get_self(),<sp/>[&amp;](<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>row<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row.current<sp/>=<sp/>iteration;<sp/></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal">uint64_t<sp/>readiter(){<sp/></highlight><highlight class="comment">//<sp/>TEST<sp/>function.<sp/>Simulate<sp/>external<sp/>reading<sp/>of<sp/>current<sp/>iteration<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>stacktype<sp/>currentitr(<sp/>get_self(),<sp/>get_self().value<sp/>);<sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>idv<sp/>=<sp/>currentitr.find(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idv-&gt;current;</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="371"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>@defgroup<sp/>freeosdivide<sp/>freeossivide<sp/>contract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="D:/doxygen/source/freeosdivide.hpp"/>
  </compounddef>
</doxygen>
